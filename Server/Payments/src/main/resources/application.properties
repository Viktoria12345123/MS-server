spring.application.name=Payments
server.port=8083

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
logging.level.org.hibernate.persister.entity=ERROR

stripe.secret.key=${STRIPE_SECRET_KEY}

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=skytales.Payments.util.state_engine.serializers.MessageDeserializer
spring.kafka.consumer.value-deserializer.delegate=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=java.lang.Object

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=skytales.Payments.util.state_engine.serializers.MessageSerializer

logging.level.org.apache.kafka=ERROR
logging.level.org.springframework.kafka=ERROR
logging.level.kafka=WARN
